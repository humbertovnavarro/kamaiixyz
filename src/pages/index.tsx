import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Service, { ServiceProps } from "~/components/Service";
import { api } from "~/utils/api";
const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const selfHostedServices: Array<ServiceProps> = [
    {
      title: "PiHole",
      description: "DNS level ad blocker",
      imageSrc: "/images/pihole.png",
      link: "https://pihole.kamaii.xyz/admin",
      projectLink: "https://pi-hole.net/"
    },
    {
      title: "Nginx Proxy Manager",
      description: "Reverse proxy manager",
      imageSrc: "/images/nginx-proxy-manager.png",
      projectLink: "https://nginxproxymanager.com/",
      link: "https://nginx.kamaii.xyz"
    },
  ];

  const projects: Array<ServiceProps> = [
      {
        title: "Farwater Minecraft Server",
        description: "Minecraft server focused on automation and engineering, featuring a custom modpack, a custom mod, and custom recipes using KubeJS.",
        imageSrc: "/images/farwater.webp",
        link: "https://farwater.de",
        projectLink: "https://farwater.de",
        gitHubLink: "https://github.com/orgs/farwater-create/repositories"
      }
  ];

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            The <span className="text-[hsl(280,100%,70%)]">KamaiiXYZ</span> network
          </h1>
          <h2 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">by Humberto Navarro</h2>
          <p className="text-2xl text-white border-white border-b-2 border-white/20 w-full text-center p-2" id="services">
            About me
          </p>
          <p className="text-white  text-xl w-2/3 text-center">
          Experienced Chicano Zoomer web developer from Southern California adept in React, Node.js, and TypeScript. Skilled at crafting high-quality web applications that solve real-world problems. Thrives in collaborative team environments and embraces continuous learning. Passionate about delivering exceptional software and driven by a problem-solving mindset. Also enjoys reading books and playing video games. Ready to contribute technical prowess, adaptability, and a diverse perspective to your team's success. Let's connect and make an impact together!
          </p>
          <p className="text-2xl text-white border-white border-b-2 border-white/20 w-full text-center p-2" id="projects">
            Projects
          </p>
          <div className={`grid gap-2 w-2/3`}>
            {projects.map((service) => (
              <Service
                key={service.title}
                title={service.title}
                description={service.description}
                link={service.link}
                imageSrc={service.imageSrc}
                projectLink={service.projectLink}
                gitHubLink={service.gitHubLink}
              />
            ))}
          </div>
          <p className="text-2xl text-white border-white border-b-2 border-white/20 w-full text-center p-2" id="services">
            Services
          </p>
          <div className={`grid gap-2 w-2/3`}>
            {selfHostedServices.map((service) => (
              <Service
                key={service.title}
                title={service.title}
                description={service.description}
                link={service.link}
                imageSrc={service.imageSrc}
                projectLink={service.projectLink}
                gitHubLink={service.gitHubLink}
              />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
